{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","async","delete","name","email","phone","className","onClick","style","cursor","float","color","bind","to","marginRight","Contacts","Fragment","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","defaultProps","AddContact","errors","onSubmit","e","preventDefault","newContact","post","history","push","target","EditContact","updContact","match","params","put","Header","branding","href","About","NotFound","Test","title","body","fetch","then","response","json","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6135b0ce.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case 'UPDATE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(\r\n          (contact =>\r\n            contact.id === action.payload.id ?(contact = action.payload): contact)\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n  async componentDidMount() {\r\n    const res = await axios.get('http://jsonplaceholder.typicode.com/users');\r\n    this.setState({ contacts: res.data });\r\n  }\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport {Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try{\r\n   await axios.delete(`http://jsonplaceholder.typicode.com/users/${id}`);\r\n   dispatch({type:'DELETE_CONTACT',payload:id});\r\n    }\r\n    catch(e){\r\n      dispatch({type:'DELETE_CONTACT',payload:id});\r\n    }\r\n\r\n  \r\n  };\r\n\r\n  \r\n\r\n  render() {\r\n    //destructuring\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}{' '}\r\n                <i\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo\r\n                    })\r\n                  }\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: 'pointer' }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: 'pointer', float: 'right', color: 'red' }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n                <Link to ={`contact/edit/${id}`}> <i className=\"fas fa-pencil-alt\"\r\n                style={{\r\n                  cursor:'pointer',\r\n                  float:'right',\r\n                  color:'black',\r\n                  marginRight:'1rem'\r\n                }}></i> \r\n                </Link>\r\n\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email :{email}</li>\r\n                  <li className=\"list-group-item\">Phone :{phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb2\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'; \r\n//import classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className=\"form-control form-control-lg \"\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error &&\r\n      <div className=\"invalid-feedback\">{error}</div>}\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string.isRequired\r\n};\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport uuid from 'uuid';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    //check for errors\r\n    if (name == '') {\r\n      this.setState({ errors: { name: 'name is required' } });\r\n      return;\r\n    }\r\n    if (email == '') {\r\n      this.setState({ errors: { email: 'email is require' } });\r\n      return;\r\n    }\r\n    if (phone == '') {\r\n      this.setState({ errors: { phone: 'phone is require' } });\r\n      return;\r\n    }\r\n    const newContact = {\r\n      // id:uuid(),\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n    const res=await axios\r\n      .post('http://jsonplaceholder.typicode.com/users',newContact)\r\n     ;\r\n     dispatch({ type: 'ADD_CONTACT', payload: res.data })\r\n\r\n    //clear state\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact </div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default AddContact;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\n// import uuid from 'uuid';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount(){\r\n    const { id }=this.props.match.params;\r\n    const res=await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    const contact =res.data;\r\n    this.setState({\r\n      name:contact.name,\r\n      email:contact.email,\r\n      phone:contact.phone\r\n    })\r\n  }\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    //check for errors\r\n    if (name == '') {\r\n      this.setState({ errors: { name: 'name is required' } });\r\n      return;\r\n    }\r\n    if (email == '') {\r\n      this.setState({ errors: { email: 'email is require' } });\r\n      return;\r\n    }\r\n    if (phone == '') {\r\n      this.setState({ errors: { phone: 'phone is required' } });\r\n      return;\r\n    }\r\n    const updContact={\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n   const { id }= this.props.match.params;\r\n   const res= await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`,updContact);\r\n\r\n   dispatch({type:'UPDATE_CONTACT',payload: res.data});\r\n\r\n\r\n    //clear state\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit  Contact </div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default EditContact;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py--0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\"></i>\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\"></i>\r\n                Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\"></i>\r\n                About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\nHeader.defaultProps = {\r\n  branding: 'My App'\r\n};\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\"> Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">version 1.0.0</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\r\n      <p className=\"lead\">Sorry,Page Does Not exist</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nclass Test extends Component {\r\n  state={\r\n    title:'',\r\n    body:''\r\n  };\r\n\r\n\r\n  componentDidMount(){\r\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n    .then(response => response.json())\r\n    .then(data =>this.setState({\r\n      title:data.title,\r\n      body:data.body\r\n    })\r\n    );\r\n  \r\n   }\r\n\r\n\r\n\r\n  render() {\r\n    const{title, body}=this.state\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Test;","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\n\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\n\nimport { Provider } from './context';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}